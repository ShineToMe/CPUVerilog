Release 13.4 - xst O.87xd (nt)
Copyright (c) 1995-2011 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.38 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.38 secs
 
--> Reading design: CPU.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "CPU.prj"
Input Format                       : mixed
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "CPU"
Output Format                      : NGC
Target Device                      : xc3s50a-4-tq144

---- Source Options
Top Module Name                    : CPU
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Mux Style                          : Auto
Decoder Extraction                 : YES
Priority Encoder Extraction        : Yes
Shift Register Extraction          : YES
Logical Shifter Extraction         : YES
XOR Collapsing                     : YES
ROM Style                          : Auto
Mux Extraction                     : Yes
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Multiplier Style                   : Auto
Automatic Register Balancing       : No

---- Target Options
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 24
Register Duplication               : YES
Slice Packing                      : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Yes
Use Synchronous Set                : Yes
Use Synchronous Reset              : Yes
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
Verilog 2001                       : YES
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "SimpleRegister.v" in library work
Compiling verilog file "Registers.v" in library work
Module <SimpleRegister> compiled
Compiling verilog file "PCSetter.v" in library work
Module <Registers> compiled
Compiling verilog file "PC.v" in library work
Module <PCSetter> compiled
Compiling verilog file "Memory.v" in library work
Module <PC> compiled
Compiling verilog file "InstructionRegister.v" in library work
Module <Memory> compiled
Compiling verilog file "Control.v" in library work
Module <InstructionRegister> compiled
Compiling verilog file "CPU.v" in library work
Module <Control> compiled
Module <CPU> compiled
No errors in compilation
Analysis of file <"CPU.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <CPU> in library <work>.

Analyzing hierarchy for module <Control> in library <work> with parameters.
	ADDI = "001000"
	ANDI = "001100"
	BEQZ = "000100"
	BNEZ = "000101"
	J = "000010"
	JAL = "000011"
	JALR = "010011"
	JR = "010010"
	LHI = "001111"
	LW = "100011"
	ORI = "001101"
	SEQI = "011000"
	SLEI = "011100"
	SLLI = "010100"
	SLTI = "011010"
	SNEI = "011001"
	SRAI = "010111"
	SRLI = "010110"
	STATE_0 = "00000000000000000000000000000000"
	STATE_1 = "00000000000000000000000000000001"
	STATE_10 = "00000000000000000000000000001010"
	STATE_11 = "00000000000000000000000000001011"
	STATE_12 = "00000000000000000000000000001100"
	STATE_13 = "00000000000000000000000000001101"
	STATE_14 = "00000000000000000000000000001110"
	STATE_15 = "00000000000000000000000000001111"
	STATE_16 = "00000000000000000000000000010000"
	STATE_17 = "00000000000000000000000000010001"
	STATE_2 = "00000000000000000000000000000010"
	STATE_3 = "00000000000000000000000000000011"
	STATE_4 = "00000000000000000000000000000100"
	STATE_5 = "00000000000000000000000000000101"
	STATE_6 = "00000000000000000000000000000110"
	STATE_7 = "00000000000000000000000000000111"
	STATE_8 = "00000000000000000000000000001000"
	STATE_9 = "00000000000000000000000000001001"
	SUBI = "001010"
	SW = "101011"
	XORI = "001110"

Analyzing hierarchy for module <PCSetter> in library <work>.

Analyzing hierarchy for module <PC> in library <work>.

Analyzing hierarchy for module <Memory> in library <work>.

Analyzing hierarchy for module <SimpleRegister> in library <work>.

Analyzing hierarchy for module <InstructionRegister> in library <work>.

Analyzing hierarchy for module <Registers> in library <work>.


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <CPU>.
WARNING:Xst:863 - "CPU.v" line 131: Name conflict (<memDataRegOut> and <MemDataRegOut>, renaming memDataRegOut as memdataregout_rnm0).
WARNING:Xst:863 - "CPU.v" line 130: Name conflict (<memData> and <MemData>, renaming memData as memdata_rnm0).
WARNING:Xst:863 - "CPU.v" line 120: Name conflict (<Bout> and <BOut>, renaming Bout as bout_rnm0).
Module <CPU> is correct for synthesis.
 
Analyzing module <Control> in library <work>.
	ADDI = 6'b001000
	ANDI = 6'b001100
	BEQZ = 6'b000100
	BNEZ = 6'b000101
	J = 6'b000010
	JAL = 6'b000011
	JALR = 6'b010011
	JR = 6'b010010
	LHI = 6'b001111
	LW = 6'b100011
	ORI = 6'b001101
	SEQI = 6'b011000
	SLEI = 6'b011100
	SLLI = 6'b010100
	SLTI = 6'b011010
	SNEI = 6'b011001
	SRAI = 6'b010111
	SRLI = 6'b010110
	STATE_0 = 32'sb00000000000000000000000000000000
	STATE_1 = 32'sb00000000000000000000000000000001
	STATE_10 = 32'sb00000000000000000000000000001010
	STATE_11 = 32'sb00000000000000000000000000001011
	STATE_12 = 32'sb00000000000000000000000000001100
	STATE_13 = 32'sb00000000000000000000000000001101
	STATE_14 = 32'sb00000000000000000000000000001110
	STATE_15 = 32'sb00000000000000000000000000001111
	STATE_16 = 32'sb00000000000000000000000000010000
	STATE_17 = 32'sb00000000000000000000000000010001
	STATE_2 = 32'sb00000000000000000000000000000010
	STATE_3 = 32'sb00000000000000000000000000000011
	STATE_4 = 32'sb00000000000000000000000000000100
	STATE_5 = 32'sb00000000000000000000000000000101
	STATE_6 = 32'sb00000000000000000000000000000110
	STATE_7 = 32'sb00000000000000000000000000000111
	STATE_8 = 32'sb00000000000000000000000000001000
	STATE_9 = 32'sb00000000000000000000000000001001
	SUBI = 6'b001010
	SW = 6'b101011
	XORI = 6'b001110
Module <Control> is correct for synthesis.
 
Analyzing module <PCSetter> in library <work>.
Module <PCSetter> is correct for synthesis.
 
Analyzing module <PC> in library <work>.
Module <PC> is correct for synthesis.
 
Analyzing module <Memory> in library <work>.
INFO:Xst:1607 - Contents of array <mem> may be accessed with an index that does not cover the full array size.
INFO:Xst:1607 - Contents of array <mem> may be accessed with an index that does not cover the full array size.
Module <Memory> is correct for synthesis.
 
Analyzing module <SimpleRegister> in library <work>.
Module <SimpleRegister> is correct for synthesis.
 
Analyzing module <InstructionRegister> in library <work>.
Module <InstructionRegister> is correct for synthesis.
 
Analyzing module <Registers> in library <work>.
Module <Registers> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...

Synthesizing Unit <Control>.
    Related source file is "Control.v".
    Found finite state machine <FSM_0> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 18                                             |
    | Transitions        | 40                                             |
    | Inputs             | 21                                             |
    | Outputs            | 8                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00000                                          |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 1-bit register for signal <PCWriteIfNonZero>.
    Found 2-bit register for signal <PCSource>.
    Found 2-bit register for signal <ALUOp>.
    Found 1-bit register for signal <PCWrite>.
    Found 1-bit register for signal <MemRead>.
    Found 1-bit register for signal <IRWrite>.
    Found 2-bit register for signal <RegDst>.
    Found 1-bit register for signal <ALUSrcA>.
    Found 3-bit register for signal <ALUSrcB>.
    Found 1-bit register for signal <RegWrite>.
    Found 1-bit register for signal <PCWriteIfZero>.
    Found 1-bit register for signal <MemWrite>.
    Found 2-bit register for signal <MemToReg>.
    Found 1-bit register for signal <IorD>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  17 D-type flip-flop(s).
Unit <Control> synthesized.


Synthesizing Unit <PCSetter>.
    Related source file is "PCSetter.v".
Unit <PCSetter> synthesized.


Synthesizing Unit <PC>.
    Related source file is "PC.v".
    Found 32-bit register for signal <q>.
    Summary:
	inferred  32 D-type flip-flop(s).
Unit <PC> synthesized.


Synthesizing Unit <Memory>.
    Related source file is "Memory.v".
WARNING:Xst:647 - Input <Adress<31:5>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32x32-bit single-port RAM <Mram_mem> for signal <mem>.
    Found 32-bit register for signal <MemData>.
    Summary:
	inferred   1 RAM(s).
	inferred  32 D-type flip-flop(s).
Unit <Memory> synthesized.


Synthesizing Unit <SimpleRegister>.
    Related source file is "SimpleRegister.v".
    Found 32-bit register for signal <q>.
    Summary:
	inferred  32 D-type flip-flop(s).
Unit <SimpleRegister> synthesized.


Synthesizing Unit <InstructionRegister>.
    Related source file is "InstructionRegister.v".
    Found 32-bit register for signal <instruction>.
    Summary:
	inferred  32 D-type flip-flop(s).
Unit <InstructionRegister> synthesized.


Synthesizing Unit <Registers>.
    Related source file is "Registers.v".
    Found 32x32-bit dual-port RAM <Mram_registers> for signal <registers>.
    Found 32x32-bit dual-port RAM <Mram_registers_ren> for signal <registers>.
    Found 32-bit register for signal <ReadData1>.
    Found 32-bit register for signal <ReadData2>.
    Summary:
	inferred   2 RAM(s).
	inferred  64 D-type flip-flop(s).
Unit <Registers> synthesized.


Synthesizing Unit <CPU>.
    Related source file is "CPU.v".
WARNING:Xst:653 - Signal <zero> is used but never assigned. This sourceless signal will be automatically connected to value 0.
WARNING:Xst:646 - Signal <writeRegister<5>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <readData2> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <readData1> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:653 - Signal <opCode> is used but never assigned. This sourceless signal will be automatically connected to value 0.
WARNING:Xst:653 - Signal <newPC> is used but never assigned. This sourceless signal will be automatically connected to value 00000000000000000000000000000000.
WARNING:Xst:653 - Signal <memdataregout_rnm0> is used but never assigned. This sourceless signal will be automatically connected to value 00000000000000000000000000000000.
WARNING:Xst:646 - Signal <instruction31_26> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <instruction25_0> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:1780 - Signal <bout_rnm0> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <PCSource> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <MemDataRegOut> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:653 - Signal <MemData> is used but never assigned. This sourceless signal will be automatically connected to value 0.
WARNING:Xst:653 - Signal <BOut> is used but never assigned. This sourceless signal will be automatically connected to value 0.
WARNING:Xst:1780 - Signal <Aout> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <ALUSrcB> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <ALUSrcA> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:653 - Signal <ALUOutValue> is used but never assigned. This sourceless signal will be automatically connected to value 00000000000000000000000000000000.
WARNING:Xst:646 - Signal <ALUOp> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
    Found 32-bit 4-to-1 multiplexer for signal <writeData>.
    Summary:
	inferred  32 Multiplexer(s).
Unit <CPU> synthesized.

WARNING:Xst:524 - All outputs of the instance <MemoryDataRegister> of the block <SimpleRegister> are unconnected in block <CPU>.
   This instance will be removed from the design along with all underlying logic
WARNING:Xst:524 - All outputs of the instance <registers> of the block <Registers> are unconnected in block <CPU>.
   This instance will be removed from the design along with all underlying logic

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 1
 32x32-bit single-port RAM                             : 1
# Registers                                            : 17
 1-bit register                                        : 9
 2-bit register                                        : 4
 3-bit register                                        : 1
 32-bit register                                       : 3

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <control/state/FSM> on signal <state[1:18]> with one-hot encoding.
-----------------------------
 State | Encoding
-----------------------------
 00000 | 000000000000000001
 00001 | 000000000000000010
 00010 | 000000000000000100
 00011 | 000010000000000000
 00100 | 001000000000000000
 00101 | 000100000000000000
 00110 | 000001000000000000
 00111 | 010000000000000000
 01000 | 000000000000001000
 01001 | 100000000000000000
 01010 | 000000000000010000
 01011 | 000000000000100000
 01100 | 000000000001000000
 01101 | 000000000010000000
 01110 | 000000000100000000
 01111 | 000000001000000000
 10000 | 000000010000000000
 10001 | 000000100000000000
-----------------------------
FATAL_ERROR:Xst:Portability/export/Port_Main.h:159:1.18 - This application has discovered an exceptional condition from which it cannot recover.  Process will terminate. For technical support on this issue, please open a WebCase with this project attached at http://www.xilinx.com/support.
